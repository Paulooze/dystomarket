steps:
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "europe-west10-docker.pkg.dev/$PROJECT_ID/dystomarket/dystomarket:$SHORT_SHA",
        ".",
      ]
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "europe-west10-docker.pkg.dev/$PROJECT_ID/dystomarket/dystomarket:$SHORT_SHA",
      ]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "dystomarket"
      - "--image"
      - "europe-west10-docker.pkg.dev/$PROJECT_ID/dystomarket/dystomarket:$SHORT_SHA"
      - "--region"
      - "europe-west10"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--service-account"
      - "dystomarket-cloud-run@$PROJECT_ID.iam.gserviceaccount.com" # Use your service account email
      - "--set-env-vars=DATABASE_URL=postgresql://$$DB_USER:$$DB_PASSWORD@/$$DB_NAME?host=$$DB_HOST" # Construct DATABASE_URL
      - "--set-env-vars"
      - "NEXT_PUBLIC_API_URL=/api"
    secretEnv: ["DB_USER", "DB_PASSWORD", "DB_NAME", "DB_HOST"]

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "services"
      - "update"
      - "dystomarket"
      - "--region"
      - "europe-west10"
      - "--add-cloudsql-instances"
      - "$PROJECT_ID:europe-west10:dystomarket-db" # Your instance connection name
images:
  - "europe-west10-docker.pkg.dev/$PROJECT_ID/dystomarket:$SHORT_SHA"
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/db_user/versions/latest
      env: "DB_USER"
    - versionName: projects/$PROJECT_ID/secrets/db_password/versions/latest
      env: "DB_PASSWORD"
    - versionName: projects/$PROJECT_ID/secrets/db_name/versions/latest
      env: "DB_NAME"
    - versionName: projects/$PROJECT_ID/secrets/db_host/versions/latest
      env: "DB_HOST"

steps:
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "europe-west10-docker.pkg.dev/$PROJECT_ID/dystomarket/dystomarket:$SHORT_SHA",
        ".",
      ]
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "europe-west10-docker.pkg.dev/$PROJECT_ID/dystomarket/dystomarket:$SHORT_SHA",
      ]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "dystomarket"
      - "--image"
      - "europe-west10-docker.pkg.dev/$PROJECT_ID/dystomarket/dystomarket:$SHORT_SHA"
      - "--region"
      - "europe-west10"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--service-account"
      - "dystomarket-cloud-run@$PROJECT_ID.iam.gserviceaccount.com" # Use your service account email
      - "--set-env-vars=DATABASE_URL=postgresql://${db_user}:${db_password}@/${db_name}?host=${db_host}" # Construct DATABASE_URL
      - "--set-env-vars"
      - "NEXT_PUBLIC_API_URL=/api"
    secretEnv:
      - "DB_USER=projects/$PROJECT_NUMBER/secrets/db_user/versions/1"
      - "DB_PASSWORD=projects/$PROJECT_NUMBER/secrets/db_password/versions/1"
      - "DB_NAME=projects/$PROJECT_NUMBER/secrets/db_name/versions/1"
      - "DB_HOST=projects/$PROJECT_NUMBER/secrets/db_host/versions/1"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "services"
      - "update"
      - "dystomarket"
      - "--region"
      - "europe-west10"
      - "--add-cloudsql-instances"
      - "$PROJECT_ID:europe-west10:dystomarket-db" # Your instance connection name
images:
  - "europe-west10-docker.pkg.dev/$PROJECT_ID/dystomarket:$SHORT_SHA"
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
